/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.group2.swing;

import com.group2.dao.CheckInDAO;
import com.group2.dao.HoiVienDAO;
import com.group2.entity.ChekIn;
import com.group2.entity.HoiVien;
import com.group2.ui.ChamSocKhachHangJDailog;
import com.group2.ui.ChiTietHoiVienJDailog;
import com.group2.utils.Auth;
import com.group2.utils.GImage;
import com.group2.utils.MsgBox;
import com.group2.utils.GDate;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.Timer;

/**
 *
 * @author HieuHoang
 */
public class Status extends javax.swing.JPanel {

    EventSelected ev;
    private EventSelected event;
    private DefaultListModel<String> dlmList1;
    private Card card;

    public void addEventSelectedMenuItem(EventSelected event) {
        this.event = event;
        listAcFunction1.addEventSelectedMenuItem(this.event);
    }

    public void setListModelCheckIn(DefaultListModel<String> listModel, Card card) {
        this.dlmList1 = listModel;
        this.card = card;
    }

    /**
     * Creates new form Status
     */
    public Status() {
     
        initComponents();
        init();
    
        if (Auth.user.getHinh() != null) {
            imageAvatar2.setImage(GImage.read("nvIMG/", Auth.user.getHinh()));

        } else {
            imageAvatar2.setImage(GImage.read("khachhangIMG/", "macdinh.png"));

        }
        jPopupMenu1.setBackground(new Color(0, 0, 0, 0));

        imageAvatar2.setCursor(new Cursor(12));
        listAcFunction1.addItem(new ModelAcFunction("/com/group2/icons/icons8_account_48px.png", "Tài khoản", ModelAcFunction.MenuItemType.MENUITEM));

        listAcFunction1.addItem(new ModelAcFunction("/com/group2/icons/icons8_password_48px.png", "Đổi mật khẩu", ModelAcFunction.MenuItemType.MENUITEM));
        listAcFunction1.addItem(new ModelAcFunction("/com/group2/icons/icons8_Logout_48px.png", "Đăng xuất", ModelAcFunction.MenuItemType.MENUITEM));

        jPopupMenu1.add(listAcFunction1);

    }
    JFrame frame;

    public void setMainFrame(JFrame mainFrame) {
        this.frame = mainFrame;
    }

    public void addEventSelected(EventSelected e) {
        ev = e;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        listAcFunction1 = new com.group2.swing.ListAcFunction<>();
        gradientBackGround1 = new com.group2.swing.GradientBackGround();
        btnCheckIn = new com.group2.swing.Button();
        btnTakeCareOf = new com.group2.swing.Button();
        imgPartDay = new com.group2.swing.ImageView();
        lblTime = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        txtSDT = new com.group2.swing.TextField();
        imageAvatar2 = new com.group2.swing.ImageAvatar();

        jPopupMenu1.setBackground(new java.awt.Color(0, 0, 0));

        listAcFunction1.setBackground(new java.awt.Color(0, 0, 0));

        setOpaque(false);

        gradientBackGround1.setBorderRadius(8);
        gradientBackGround1.setShadowColor(new java.awt.Color(204, 204, 204));
        gradientBackGround1.setShadowSize(10);

        btnCheckIn.setBackground(new java.awt.Color(204, 0, 0));
        btnCheckIn.setForeground(new java.awt.Color(255, 255, 255));
        btnCheckIn.setText("Check in");
        btnCheckIn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckInActionPerformed(evt);
            }
        });

        btnTakeCareOf.setBackground(new java.awt.Color(0, 102, 255));
        btnTakeCareOf.setForeground(new java.awt.Color(255, 255, 255));
        btnTakeCareOf.setText("Chăm sóc khách hàng");
        btnTakeCareOf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTakeCareOf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTakeCareOfActionPerformed(evt);
            }
        });

        imgPartDay.setImage(new javax.swing.ImageIcon(getClass().getResource("/com/group2/icons/icons8_sun_48px.png"))); // NOI18N

        lblTime.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTime.setText("hh:mm:ss a, dd/MM/yyyy");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        txtSDT.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSDT.setLabelText("Nhập số điện thoại để check in cho hội viên");

        imageAvatar2.setBorderSize(1);
        imageAvatar2.setBorderSpace(1);
        imageAvatar2.setGradientColor1(new java.awt.Color(0, 0, 0));
        imageAvatar2.setGradientColor2(new java.awt.Color(0, 0, 0));
        imageAvatar2.setPreferredSize(new java.awt.Dimension(30, 30));
        imageAvatar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageAvatar2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout gradientBackGround1Layout = new javax.swing.GroupLayout(gradientBackGround1);
        gradientBackGround1.setLayout(gradientBackGround1Layout);
        gradientBackGround1Layout.setHorizontalGroup(
            gradientBackGround1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientBackGround1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(txtSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTakeCareOf, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(imgPartDay, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageAvatar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        gradientBackGround1Layout.setVerticalGroup(
            gradientBackGround1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientBackGround1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(gradientBackGround1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imgPartDay, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTakeCareOf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imageAvatar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gradientBackGround1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gradientBackGround1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckInActionPerformed
        // TODO add your handling code here:
//        ev.selected(1);
        checkIn(txtSDT.getText().trim());
    }//GEN-LAST:event_btnCheckInActionPerformed

    private void btnTakeCareOfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTakeCareOfActionPerformed
        // TODO add your handling code here:
//        ev.selected(2);
        new ChamSocKhachHangJDailog().setVisible(true);

    }//GEN-LAST:event_btnTakeCareOfActionPerformed

    private void imageAvatar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageAvatar2MouseClicked
        // TODO add your handling code here:
        jPopupMenu1.show(imageAvatar2, evt.getX(), getY());

    }//GEN-LAST:event_imageAvatar2MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.group2.swing.Button btnCheckIn;
    private com.group2.swing.Button btnTakeCareOf;
    private com.group2.swing.GradientBackGround gradientBackGround1;
    private com.group2.swing.ImageAvatar imageAvatar2;
    private com.group2.swing.ImageView imgPartDay;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblTime;
    private com.group2.swing.ListAcFunction<String> listAcFunction1;
    private com.group2.swing.TextField txtSDT;
    // End of variables declaration//GEN-END:variables

    private void init() {
        Timer timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Calendar c = Calendar.getInstance();
//                System.out.println(c.get(Calendar.HOUR_OF_DAY));
                if (c.get(Calendar.AM_PM) == 0) {

                    imgPartDay.setImage(new ImageIcon(getClass().getResource("/com/group2/icons/icons8_sun_48px.png")));
                } else {

                    imgPartDay.setImage(new ImageIcon(getClass().getResource("/com/group2/icons/icons8_moon_phase_48px_1.png")));

                }
                lblTime.setText(GDate.toString(c.getTime(), "hh:mm:ss a, dd/MM/yyyy"));

            }
        });
        timer.start();
    }
    CheckInDAO checkInDAO = new CheckInDAO();
    HoiVienDAO hvdao = new HoiVienDAO();

    public void checkIn(String input) {
     
        String sdt = input;
        if (sdt != null && !sdt.equals("")) {
            if (checkInDAO.check(sdt) == false) {
                MsgBox.alert(null, "Người này đã check in trong ngày", "Bạn không cần phải check in nữa", Alert.AlertType.ERROR);
            } else {

                HoiVien hv = hvdao.selectBySDT(sdt);
                if (hv != null) {
                    checkInDAO.insert(hv.getID()); 
                    //Dùng y để bỏ qua fillToList khi test
                    if(dlmList1 != null){
                        fillToList(); 
                    }           
                    MsgBox.alert(null, "Thông báo", "Check in thành công cho hội viên!", Alert.AlertType.SUCCESS);
                    txtSDT.setText("");
                    new ChiTietHoiVienJDailog(hv.getID()).setVisible(true);
                } else {
                    MsgBox.alert(null, "Check in thất bại!", "Số điện thoại này không phải của hội viên", Alert.AlertType.ERROR);

                }

            }
        } else {

            MsgBox.alert(null, "Check in thất bại!", "Vui lòng nhập số điện thoại để check in!", Alert.AlertType.ERROR);
        }
    }
    
    public boolean checkin(String input){
          String sdt = input;
        if (sdt != null && !sdt.equals("")) {
            if (checkInDAO.check(sdt) == false) {
                return false;
//                MsgBox.alert(null, "Người này đã check in trong ngày", "Bạn không cần phải check in nữa", Alert.AlertType.ERROR);
            } else {

                HoiVien hv = hvdao.selectBySDT(sdt);
                if (hv != null) {
                    return true;
//                    checkInDAO.insert(hv.getID());
//                    fillToList();
//                    MsgBox.alert(null, "Thông báo", "Check in thành công cho hội viên!", Alert.AlertType.SUCCESS);
//                    txtSDT.setText("");
//                    new ChiTietHoiVienJDailog(hv.getID()).setVisible(true);
                } else {
                    return false;
//                    MsgBox.alert(null, "Check in thất bại!", "Số điện thoại này không phải của hội viên", Alert.AlertType.ERROR);

                }

            }
        } else {
            return false;
          //  MsgBox.alert(null, "Check in thất bại!", "Vui lòng nhập số điện thoại để check in!", Alert.AlertType.ERROR);
        }
    }
    
    private void fillToList() {
        dlmList1.removeAllElements();
        for (ChekIn chekIn : checkInDAO.SoHVCheckIn()) {
            dlmList1.addElement(chekIn.toString());
        }
        card.setTextJlabel(checkInDAO.SoHVCheckIn().size() + "");

    }
}
